<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.net.dao.ValveModelMapper">
  <resultMap id="BaseResultMap" type="com.ps.net.model.ValveModel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="model_name" jdbcType="VARCHAR" property="model_name" />
    <result column="model_manu" jdbcType="VARCHAR" property="model_manu" />
    <result column="comm_mode" jdbcType="CHAR" property="comm_mode" />
    <result column="prot_num" jdbcType="INTEGER" property="prot_num" />
    <result column="caliber" jdbcType="INTEGER" property="caliber" />
    <result column="ctrl_time" jdbcType="INTEGER" property="ctrl_time" />
    <result column="available" jdbcType="INTEGER" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    id, model_name, model_manu, comm_mode, prot_num, caliber, ctrl_time, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from valve_model
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from valve_model
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ps.net.model.ValveModel">
    insert into valve_model (id, model_name, model_manu, 
      comm_mode, prot_num, caliber, 
      ctrl_time, available)
    values (#{id,jdbcType=INTEGER}, #{model_name,jdbcType=VARCHAR}, #{model_manu,jdbcType=VARCHAR}, 
      #{comm_mode,jdbcType=CHAR}, #{prot_num,jdbcType=INTEGER}, #{caliber,jdbcType=INTEGER}, 
      #{ctrl_time,jdbcType=INTEGER}, #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ps.net.model.ValveModel">
    insert into valve_model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="model_name != null">
        model_name,
      </if>
      <if test="model_manu != null">
        model_manu,
      </if>
      <if test="comm_mode != null">
        comm_mode,
      </if>
      <if test="prot_num != null">
        prot_num,
      </if>
      <if test="caliber != null">
        caliber,
      </if>
      <if test="ctrl_time != null">
        ctrl_time,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="model_name != null">
        #{model_name,jdbcType=VARCHAR},
      </if>
      <if test="model_manu != null">
        #{model_manu,jdbcType=VARCHAR},
      </if>
      <if test="comm_mode != null">
        #{comm_mode,jdbcType=CHAR},
      </if>
      <if test="prot_num != null">
        #{prot_num,jdbcType=INTEGER},
      </if>
      <if test="caliber != null">
        #{caliber,jdbcType=INTEGER},
      </if>
      <if test="ctrl_time != null">
        #{ctrl_time,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ps.net.model.ValveModel">
    update valve_model
    <set>
      <if test="model_name != null">
        model_name = #{model_name,jdbcType=VARCHAR},
      </if>
      <if test="model_manu != null">
        model_manu = #{model_manu,jdbcType=VARCHAR},
      </if>
      <if test="comm_mode != null">
        comm_mode = #{comm_mode,jdbcType=CHAR},
      </if>
      <if test="prot_num != null">
        prot_num = #{prot_num,jdbcType=INTEGER},
      </if>
      <if test="caliber != null">
        caliber = #{caliber,jdbcType=INTEGER},
      </if>
      <if test="ctrl_time != null">
        ctrl_time = #{ctrl_time,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ps.net.model.ValveModel">
    update valve_model
    set model_name = #{model_name,jdbcType=VARCHAR},
      model_manu = #{model_manu,jdbcType=VARCHAR},
      comm_mode = #{comm_mode,jdbcType=CHAR},
      prot_num = #{prot_num,jdbcType=INTEGER},
      caliber = #{caliber,jdbcType=INTEGER},
      ctrl_time = #{ctrl_time,jdbcType=INTEGER},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectValveModelList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from valve_model
where 1=1
    <if test="model_name!=null">
      and model_name like "%"#{model_name}"%"
    </if>
    <if test="model_manu!=null">
      and model_manu like "%"#{model_manu}"%"
    </if>
    order by id
    limit #{first},#{last}
  </select>
    <select id="selectValveModelListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from(
        select
        <include refid="Base_Column_List" />
        from valve_model
        where 1=1
        <if test="model_name!=null">
            and model_name like "%"#{model_name}"%"
        </if>
        <if test="model_manu!=null">
            and model_manu like "%"#{model_manu}"%"
        </if>)as g
    </select>
  <select id="selectByModelName" parameterType="java.util.Map" resultType="com.ps.net.model.ValveModel">
    select * from  valve_model
    where model_name=#{model_name}
    <if test="id!=null">
      and id!=#{id}
    </if>
  </select>
</mapper>