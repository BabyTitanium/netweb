<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.net.dao.ChargeTypeMapper">
  <resultMap id="BaseResultMap" type="com.ps.net.model.ChargeType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="available" jdbcType="INTEGER" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, code, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from charge_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from charge_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ps.net.model.ChargeType">
    insert into charge_type (id, name, code, 
      available)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ps.net.model.ChargeType">
    insert into charge_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ps.net.model.ChargeType">
    update charge_type
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ps.net.model.ChargeType">
    update charge_type
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectChargeTypeList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from charge_type where 1=1
    <if test="name!=null">
      and name=#{name}
    </if>
    <if test="code!=null">
      and code=#{code}
    </if>
    order by id
    limit #{first},#{last}
  </select>
  <select id="selectChargeTypeListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from(
    select * from charge_type where 1=1
    <if test="name!=null">
      and name=#{name}
    </if>
    <if test="code!=null">
      and code=#{code}
    </if>
    )as g
  </select>
  <select id="nameCheck" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from charge_type where name=#{name}
    <if test="id!=null">
     and  id!=#{id}
    </if>
  </select>
  <select id="codeCheck" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from charge_type where code=#{code}
    <if test="id!=null">
      and  id!=#{id}
    </if>
  </select>
</mapper>