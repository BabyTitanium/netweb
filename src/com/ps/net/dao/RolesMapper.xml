<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.net.dao.RolesMapper">
  <resultMap id="BaseResultMap" type="com.ps.net.model.Roles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="role_name" />
    <result column="role_code" jdbcType="CHAR" property="role_code" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ps.net.model.Roles">
    insert into roles (id, role_name, role_code
      )
    values (#{id,jdbcType=INTEGER}, #{role_name,jdbcType=VARCHAR}, #{role_code,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ps.net.model.Roles">
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role_name != null">
        role_name,
      </if>
      <if test="role_code != null">
        role_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role_name != null">
        #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_code != null">
        #{role_code,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ps.net.model.Roles">
    update roles
    <set>
      <if test="role_name != null">
        role_name = #{role_name,jdbcType=VARCHAR},
      </if>
      <if test="role_code != null">
        role_code = #{role_code,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ps.net.model.Roles">
    update roles
    set role_name = #{role_name,jdbcType=VARCHAR},
      role_code = #{role_code,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getRoleList" resultType="java.util.Map" parameterType="java.util.Map">
    select * from roles
    <if test="first!=null and last!=null">
      limit #{first},#{last}
    </if>
  </select>
  <select id="getRoleListCount" resultType="java.lang.Integer">
    select count(*) from roles
  </select>
  <select id="getRoleService" parameterType="java.lang.Integer" resultType="java.util.Map">
    select rsr.id as rid, sr.name as name,sr.note as note  from service_role sr,role_service_role rsr where rsr.service_role_id=sr.id and rsr.role_id=#{role_id}
  </select>
  <select id="getRole" parameterType="java.util.Map" resultType="java.util.Map">
    select * from roles where 1=1
    <if test="id!=null">
       and id!=#{id}
    </if>
    <if test="role_name!=null">
      and role_name=#{role_name}
    </if>
    <if test="role_code!=null">
      and role_code=#{role_code}
    </if>
  </select>
  <delete id="deleteRoleService" parameterType="java.lang.Integer">
    delete from role_service_role where id=#{id}
  </delete>

  <insert id="addRoleService" parameterType="java.util.Map">
    insert into role_service_role (role_id, service_role_id) values (#{role_id},#{service_id});
  </insert>
    <select id="getModules" resultType="java.util.Map">
        select * from modules
    </select>
    <select id="getFunctions" parameterType="java.lang.Integer" resultType="java.util.Map">
        select * from functions where module_id=#{module_id}
    </select>
    <select id="getRoleFunc" parameterType="java.util.Map" resultType="java.util.Map">
        select * from role_function where role_id=#{role_id} and function_id=#{function_id}
    </select>
</mapper>