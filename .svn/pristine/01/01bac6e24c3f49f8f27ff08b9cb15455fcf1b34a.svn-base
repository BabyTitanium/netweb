<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.net.dao.RoomLocationMapper">
  <resultMap id="BaseResultMap" type="com.ps.net.model.RoomLocation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="CHAR" property="code" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="available" jdbcType="INTEGER" property="available" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, location, available
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room_location
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room_location
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ps.net.model.RoomLocation">
    insert into room_location (id, code, location, 
      available)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=CHAR}, #{location,jdbcType=VARCHAR}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ps.net.model.RoomLocation">
    insert into room_location
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ps.net.model.RoomLocation">
    update room_location
    <set>
      <if test="code != null">
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ps.net.model.RoomLocation">
    update room_location
    set code = #{code,jdbcType=CHAR},
      location = #{location,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRoomLocationList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from room_location
    where 1=1
    <if test="code!=null">
      and code like "%"#{code}"%"
    </if>
    <if test="location!=null">
      and location like "%"#{location}"%"
    </if>
    order by id
    <if test="first!=null and last!=null">
      limit #{first},#{last}
    </if>

    ;
  </select>
  <select id="selectRoomLocationListCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(*) from(
    select * from room_location
    where 1=1
    <if test="code!=null">
      and code like "%"#{code}"%"
    </if>
    <if test="location!=null">
      and location like "%"#{location}"%"
    </if>
    )as g
  </select>
  <select id="checkCodeExist" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from room_location where 1=1
    <if test="id!=null">
      and id!=#{id}
    </if>

       and code=#{code}
  </select>

  <select id="checkLocationExist" parameterType="java.util.Map" resultMap="BaseResultMap">
  select * from room_location where 1=1
    <if test="id!=null">
     and  id!=#{id}
    </if>
    and location=#{location}
  </select>


</mapper>