package com.ps.net.controller;

import com.ps.net.model.CustomType;
import com.ps.net.model.HeatType;
import com.ps.net.model.Rooms;
import com.ps.net.service.HeatTypeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Controller
@RequestMapping("heatType")
public class HeatTypeController {
    @Autowired
    private HeatTypeService heatTypeService;
    @RequestMapping(value = "heatType.do")
    public String heatType(){
        return "heatType";
    }
    @RequestMapping(value = "heatTypeList.do",method = RequestMethod.GET)
    public @ResponseBody Map<String, Object> getHeatTypeList(Integer page,Integer limit,String type_name,String type_code){
        try {
            Map<String, Object> map = new HashMap<>();
            if(type_name==""){
                type_name=null;
            }
            if(type_code==""){
                type_code=null;
            }
            List<HeatType> list = heatTypeService.getHeatTypeList(page,limit,type_name,type_code);
            Integer count=heatTypeService.getHeatTypeListCount(type_name,type_code);
            map.put("code", 0);
            map.put("msg", "");
            map.put("data", list);
            map.put("count",count);
            return map;
        }catch (Exception e){
            return null;
        }
    }
    @RequestMapping(value = "editHeatType.do",method = RequestMethod.POST)
    public @ResponseBody   Map<String,String> editHeatTypeAvailable(HeatType heatType){
        Map<String,String> map=new HashMap<>();
        try{
            heatTypeService.updateHeatType(heatType);
            map.put("state","success");
            return map;
        }catch (Exception e){
            return null;
        }
    }


    @RequestMapping(value = "HeatTypeNameCheck.do",method = RequestMethod.GET)
    public   @ResponseBody Map<String,String> HeatTypeNameCheck(Integer id,String type_name) {
        Map<String, String> map = new HashMap<>();
        try {
            List<HeatType> list=heatTypeService.nameCheck(id,type_name);
            if(list.size()>0){
                map.put("state","error");
            }else
                map.put("state","success");
            return map;
        }catch (Exception e){
            return  null;
        }
    }
    @RequestMapping(value = "HeatTypeCodeCheck.do",method = RequestMethod.GET)
    public @ResponseBody   Map<String,String> HeatTypeCodeCheck(Integer id,String type_code) {
        Map<String, String> map = new HashMap<>();
        try {
            List<HeatType> list=heatTypeService.codeCheck(id,type_code);
            if(list.size()>0){
                map.put("state","error");
            }else
                map.put("state","success");
            return map;
        }catch (Exception e){
            return  null;
        }
    }
    @RequestMapping(value = "addHeatType.do",method = RequestMethod.POST)
    public  @ResponseBody Map<String,String> addHeatType(HeatType heatType){
        Map<String,String> map=new HashMap<>();
        try {
            heatTypeService.addHeatType(heatType);
            map.put("state","success");
            return  map;
        }catch (Exception e){
            return null;
        }
    }


    @RequestMapping(value = "getHeatType.do",method = RequestMethod.GET)
    public   @ResponseBody  HeatType getHeatType(Integer id){
        try {
            HeatType heatType=heatTypeService.getHeatType(id);
            return  heatType;
        }catch (Exception e){
            return null;
        }
    }


    @RequestMapping(value = "deleteHeatType.do",method = RequestMethod.GET)
    public  @ResponseBody Map<String,String> deleteHeatType(Integer id){
        Map<String,String> map=new HashMap<>();
        try {
            heatTypeService.deleteHeatType(id);
            map.put("state","success");
            return map;
        }catch (Exception e){
            return null;
        }
    }
    @RequestMapping(value = "HeatTypeExist",method = RequestMethod.GET)
    public  @ResponseBody Map<String, String> HeatTypeExist(Integer id){
        Map<String,String> map=new HashMap<>();
        List<Rooms> list=heatTypeService.HeatTypeExist(id);
        if(list.size()<=0){
            map.put("state","success");
        }
        return map;
    }
}
