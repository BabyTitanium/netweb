package com.ps.net.service.impl;

import com.ps.net.dao.RolesMapper;
import com.ps.net.dao.ServiceRoleMapper;
import com.ps.net.model.Roles;
import com.ps.net.model.ServiceRole;
import com.ps.net.service.RoleService;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import java.util.List;
import java.util.Map;

@Service
public class RoleServiceImpl implements RoleService {
    @Resource
    private RolesMapper rolesMapper;
    @Resource
    private ServiceRoleMapper serviceRoleMapper;
    @Override
    public List<Map<String, Object>> getRoleList(Map<String,Object> map) {
        if(map.get("page")!=null&&map.get("limit")!=null) {
            Integer page = Integer.parseInt(String.valueOf(map.get("page")));
            Integer limit = Integer.parseInt(String.valueOf(map.get("limit")));
            Integer first;
            Integer last;
            first = (page - 1) * limit;
            last = page * limit;
            map.put("first", first);
            map.put("last", last);
        }
        return rolesMapper.getRoleList(map);
    }
    @Override
    public List<Map<String, Object>> getRoleService(Integer role_id) {
        return rolesMapper.getRoleService(role_id);
    }

    @Override
    public Integer getRoleListCount() {
        return rolesMapper.getRoleListCount();
    }

    @Override
    public Map<String, Object> getRole(Map map) {
        return rolesMapper.getRole(map);
    }

    @Override
    public void addRoles(Roles roles) {
        rolesMapper.insertSelective(roles);
    }

    @Override
    public void deleteRoleService(Integer id) {
        rolesMapper.deleteRoleService(id);
    }

    @Override
    public ServiceRole getServiceRoleByName(String name) {
        return serviceRoleMapper.getServiceRoleByName(name);
    }

    @Override
    public void addRoleService(Map map) {
        rolesMapper.addRoleService(map);
    }

    @Override
    public void editRoles(Roles roles) {
        rolesMapper.updateByPrimaryKeySelective(roles);
    }
}

